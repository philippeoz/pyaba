# Generated by Django 5.2.3 on 2025-06-12 08:18

import apps.api.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attendee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='Nome completo')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('birth_date', models.DateField(verbose_name='Data de nascimento')),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[apps.api.validators.cpf_validator], verbose_name='CPF')),
            ],
            options={
                'verbose_name': 'Participante',
                'verbose_name_plural': 'Participantes',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Título')),
                ('slug', models.SlugField(blank=True, help_text='Identificador único do evento, usado em URLs', max_length=255, null=True, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(upload_to='event_images/', verbose_name='Imagem')),
                ('start_date', models.DateField(verbose_name='Data de início')),
                ('end_date', models.DateField(verbose_name='Data de fim')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('location', models.CharField(blank=True, help_text='Local onde o evento será realizado', max_length=255, null=True, verbose_name='Localização')),
                ('url', models.URLField(blank=True, help_text='URL do evento para mais informações ou inscrições', max_length=255, null=True, verbose_name='URL do evento')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Biografia')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='instructor_photos/', verbose_name='Foto')),
            ],
            options={
                'verbose_name': 'Instrutor',
                'verbose_name_plural': 'Instrutores',
            },
        ),
        migrations.CreateModel(
            name='Tutorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Título')),
                ('start_datetime', models.DateTimeField(verbose_name='Início')),
                ('end_datetime', models.DateTimeField(verbose_name='Fim')),
                ('vacancies', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Vagas')),
                ('duration', models.DurationField(blank=True, help_text='Duração do tutorial em horas, minutos e segundos', null=True, verbose_name='Duração')),
                ('location', models.CharField(blank=True, help_text='Local onde o tutorial será realizado', max_length=255, null=True, verbose_name='Localização')),
                ('description', models.TextField(blank=True, help_text='Breve descrição do conteúdo do tutorial', null=True, verbose_name='Descrição')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutorials', to='api.event', verbose_name='Evento')),
                ('instructors', models.ManyToManyField(blank=True, help_text='Instrutores que ministrarão o tutorial', related_name='tutorials', to='api.instructor', verbose_name='Instrutores')),
            ],
            options={
                'verbose_name': 'Tutorial',
                'verbose_name_plural': 'Tutoriais',
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmed', models.BooleanField(default=False, verbose_name='Confirmado')),
                ('certificate_generated', models.BooleanField(default=False, verbose_name='Certificado gerado')),
                ('registered_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de inscrição')),
                ('uuid', models.UUIDField(default=django.utils.timezone.now, editable=False, help_text='Identificador único da inscrição, usado para certificados e verificações', unique=True, verbose_name='UUID')),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='api.attendee', verbose_name='Participante')),
                ('tutorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='api.tutorial', verbose_name='Tutorial')),
            ],
            options={
                'verbose_name': 'Inscrição',
                'verbose_name_plural': 'Inscrições',
                'unique_together': {('tutorial', 'attendee')},
            },
        ),
    ]
